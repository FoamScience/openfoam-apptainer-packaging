# ---------------------------------------------------------------------------
#
# Create Foam-Extend-based test image for OpenMPI
#
# Build
#   apptainer build test.sif test.def
#
# Note
#   apptainer version 1.3.1
#
# ---------------------------------------------------------------------------
Bootstrap: localimage
From: {{ CONTAINERS_DIR }}/basic/{{ BASE_CONTAINER }}.sif

%arguments
    OS_VERSION=24.04
    OPENMPI_VERSION=4.1.5
    OPENFOAM_VERSION=5.0
    OPENFOAM_GIT_REF=master

%files
    OMPIFoam /opt/OMPIFoam

%post
    echo "Testing OpenMPI implementation"
    source $(jq -r '.openfoam.source_script' /apps.json)
    cd /opt/OMPIFoam && mpicc -o ompiTest testOMPI.cpp
    cd /opt/OMPIFoam && wmake
    jq --arg app extend-test \
        '.[$app] |= if . == null then
        {
            ompi_test_bin: "/opt/OMPIFoam/ompiTest",
            foam_test_bin: "/opt/OMPIFoam/testOMPIFoam"
        }
        else . +
        {
            ompi_test_bin: "/opt/OMPIFoam/ompiTest",
            foam_test_bin: "/opt/OMPIFoam/testOMPIFoam"
        } end' /apps.json > /tmp/apps.json
    mv /tmp/apps.json /apps.json

%environment
    #!/bin/bash
    jq -r '.. | .source_script? // empty' /apps.json | while read -r script; do
      if [[ -f "$script" ]]; then
        source "$script"
      fi
    done
    jq -r '.. | .python_env? // empty' /apps.json | while read -r script; do
      if [[ -d "$script" ]]; then
        source "$script/bin/activate"
      fi
    done

%runscript
    #!/bin/bash
    if [ $# -eq 0 ]; then
        /bin/bash
    else
        /bin/bash -c "$@"
    fi

%labels
    Description Test applications for Foam-Extend
